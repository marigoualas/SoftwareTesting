import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        java.lang.String str0 = st1920.automaton.RegExpMatcher.makeAlpha();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "a" + "'", str0.equals("a"));
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!" + "'", str2.equals("hi!"));
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("a", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        java.lang.String str0 = st1920.automaton.RegExpMatcher.makeNum();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str0 + "' != '" + "1" + "'", str0.equals("1"));
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("a", "1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "a1" + "'", str2.equals("a1"));
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNot(matchString0);
        java.lang.Class<?> wildcardClass2 = matchString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        st1920.automaton.RegExpMatcher regExpMatcher0 = new st1920.automaton.RegExpMatcher();
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("", "a1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "a1" + "'", str2.equals("a1"));
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("", "1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        java.lang.Class<?> wildcardClass9 = matchString8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("1", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeString(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString20);
        java.lang.Class<?> wildcardClass25 = matchString24.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        java.lang.Class<?> wildcardClass4 = matchString3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString4);
        java.lang.Class<?> wildcardClass6 = matchString5.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeOr(matchString3, matchString7);
        java.lang.Class<?> wildcardClass9 = matchString8.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString4);
        java.lang.Class<?> wildcardClass6 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("1", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "1" + "'", str2.equals("1"));
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeRange(matchString9, matchString20);
        java.lang.Class<?> wildcardClass23 = matchString20.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("a", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString2, matchString6);
        st1920.automaton.MatchString matchString8 = null;
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString8);
        boolean boolean10 = st1920.automaton.RegExpMatcher.matches("", matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString19);
        st1920.automaton.MatchString matchString21 = null;
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString19, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNot(matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString29, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeOccurences(matchString25, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeRange(matchString23, matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = null;
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeOr(matchString41, matchString43);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeString(matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString41, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString39, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnd(matchString57, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makePattern(matchString58);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeAnd(matchString61, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeAnd(matchString64, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString62, matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeOccurences(matchString58, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString56, matchString58);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeAnd(matchString73, matchString74);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeOr(matchString71, matchString73);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString56, matchString73);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeOccurences(matchString39, matchString73);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeOr(matchString38, matchString73);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = null;
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeString(matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makePattern(matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString8, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeOccurences(matchString4, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makePattern(matchString16);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurences(matchString16, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeOr(matchString14, matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString14);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString29);
        java.lang.Class<?> wildcardClass31 = matchString30.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!", "1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!", "a1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeString(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = null;
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNot(matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNot(matchString15);
        java.lang.Class<?> wildcardClass17 = matchString15.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeString(matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeOr(matchString20, matchString27);
        java.lang.Class<?> wildcardClass30 = matchString27.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("a", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "a" + "'", str2.equals("a"));
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("1", "a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "1a" + "'", str2.equals("1a"));
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makePattern(matchString13);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOr(matchString11, matchString22);
        java.lang.Class<?> wildcardClass25 = matchString22.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString6);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOr(matchString19, matchString21);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString21);
        boolean boolean26 = st1920.automaton.RegExpMatcher.matches("a", matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeString(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString11, matchString15);
        st1920.automaton.MatchString matchString17 = null;
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNot(matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString21);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makePattern(matchString27);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString31, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOccurences(matchString27, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeRange(matchString24, matchString25);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString4, matchString20, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeString(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString0, matchString12);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString26);
        java.lang.Class<?> wildcardClass28 = matchString26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!", "a1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!a1" + "'", str2.equals("hi!a1"));
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!a1", "a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!a1a" + "'", str2.equals("hi!a1a"));
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString12);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNot(matchString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString15);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString21);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOccurences(matchString21, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString33, matchString37);
        st1920.automaton.MatchString matchString39 = null;
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeOccurences(matchString21, matchString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeString(matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeOr(matchString19, matchString42);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeOccurences(matchString10, matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!a1", "hi!a1a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!a1hi!a1a" + "'", str2.equals("hi!a1hi!a1a"));
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("1a", "1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "1a1" + "'", str2.equals("1a1"));
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeString(matchString2);
        java.lang.Class<?> wildcardClass4 = matchString3.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNot(matchString0);
        java.lang.Class<?> wildcardClass3 = matchString0.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makePattern(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makePattern(matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString8, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeOccurences(matchString4, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makePattern(matchString16);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurences(matchString16, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeOr(matchString14, matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString14);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString30, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeOccurences(matchString26, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOccurences(matchString23, matchString26);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString6, matchString17, matchString23);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makePattern(matchString41);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeAnd(matchString44, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString45, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeOccurences(matchString41, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString39, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString4, matchString6, matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNot(matchString3);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNot(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!a1hi!a1a", "1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makePattern(matchString13);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString24);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeString(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makePattern(matchString33);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeOccurences(matchString33, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString33);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString13, matchString24, matchString30);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString11, matchString30);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makePattern(matchString48);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeString(matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnd(matchString52, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString53, matchString57);
        st1920.automaton.MatchString matchString59 = null;
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString57, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNot(matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeAnd(matchString64, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makePattern(matchString65);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeAnd(matchString68, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeAnd(matchString71, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString69, matchString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeOccurences(matchString65, matchString74);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeAnd(matchString76, matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makePattern(matchString77);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeAnd(matchString80, matchString81);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeAnd(matchString83, matchString84);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString81, matchString85);
        st1920.automaton.MatchString matchString87 = st1920.automaton.RegExpMatcher.makeOccurences(matchString77, matchString86);
        st1920.automaton.MatchString matchString88 = st1920.automaton.RegExpMatcher.makeOr(matchString75, matchString86);
        st1920.automaton.MatchString matchString89 = st1920.automaton.RegExpMatcher.makeRange(matchString63, matchString75);
        st1920.automaton.MatchString matchString90 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString89);
        st1920.automaton.MatchString matchString91 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString89);
        st1920.automaton.MatchString matchString92 = st1920.automaton.RegExpMatcher.makeOr(matchString61, matchString89);
        st1920.automaton.MatchString matchString93 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString92);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString93);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makePattern(matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString8, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeOccurences(matchString4, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makePattern(matchString16);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurences(matchString16, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeOr(matchString14, matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString14);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makePattern(matchString32);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString36, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeOccurences(matchString32, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makePattern(matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString44, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOr(matchString42, matchString53);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeRange(matchString30, matchString42);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeOccurences(matchString29, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString29);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makePattern(matchString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString19, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurences(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makePattern(matchString27);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString31, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOccurences(matchString27, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeOr(matchString25, matchString36);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeRange(matchString13, matchString25);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makePattern(matchString43);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeAnd(matchString49, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString47, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOccurences(matchString43, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeAnd(matchString54, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makePattern(matchString55);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString58, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeAnd(matchString61, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString59, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeOccurences(matchString55, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeOr(matchString53, matchString64);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeRange(matchString41, matchString53);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString67);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeOccurences(matchString40, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString70);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean72 = st1920.automaton.RegExpMatcher.matches("a1", matchString70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: integer expected at position 37");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeRange(matchString9, matchString20);
        st1920.automaton.MatchString matchString23 = null;
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString24);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString28, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeRange(matchString27, matchString28);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makePattern(matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString44, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString55);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeString(matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeAnd(matchString63, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makePattern(matchString64);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString68, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeOccurences(matchString64, matchString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeOccurences(matchString61, matchString64);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString44, matchString55, matchString61);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString27, matchString61);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeAnd(matchString78, matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString78);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString81);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString23, matchString27, matchString81);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeOr(matchString20, matchString83);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("1a1", "hi!a1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = null;
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makePattern(matchString9);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeOccurences(matchString9, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString9);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeOr(matchString22, matchString24);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString7, matchString24);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeRange(matchString7, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeString(matchString5);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNot(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!", "1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!1" + "'", str2.equals("hi!1"));
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeString(matchString4);
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches("1", matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makePattern(matchString9);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeOccurences(matchString9, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString7, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeRange(matchString4, matchString7);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString7);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeString(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeString(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString20);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makePattern(matchString31);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString35, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeOccurences(matchString31, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString31);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeOr(matchString44, matchString46);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString29, matchString46);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeOr(matchString25, matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString0, matchString12);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makePattern(matchString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString46, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurences(matchString42, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOr(matchString40, matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeRange(matchString28, matchString40);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString54);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeOccurences(matchString27, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString60, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makePattern(matchString61);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeAnd(matchString64, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString65, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeOccurences(matchString61, matchString70);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeAnd(matchString72, matchString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeAnd(matchString75, matchString76);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString73, matchString77);
        st1920.automaton.MatchString matchString79 = null;
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString77, matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeOccurences(matchString61, matchString79);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeString(matchString82);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeAnd(matchString81, matchString82);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeOr(matchString59, matchString82);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeRange(matchString58, matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!a1", "1a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!", "hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!hi!" + "'", str2.equals("hi!hi!"));
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeString(matchString2);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOccurences(matchString0, matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeOr(matchString13, matchString15);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString11, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString1, matchString10);
        java.lang.Class<?> wildcardClass12 = matchString1.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNot(matchString0);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!a1a", "hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("1a", "hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makePattern(matchString13);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOr(matchString11, matchString22);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("a1", "hi!a1hi!a1a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!a1a", "a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!a1aa" + "'", str2.equals("hi!a1aa"));
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeString(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches("hi!", matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOr(matchString26, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makePattern(matchString38);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeString(matchString38);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeRange(matchString36, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeAnd(matchString44, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString44);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString43, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString31, matchString36, matchString43);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeString(matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNot(matchString50);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeAnd(matchString54, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString58, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makePattern(matchString59);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnd(matchString65, matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString63, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeOccurences(matchString59, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeAnd(matchString57, matchString59);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeAnd(matchString71, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeAnd(matchString74, matchString75);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeOr(matchString72, matchString74);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString57, matchString74);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeAnd(matchString79, matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makePattern(matchString80);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeRange(matchString57, matchString82);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeAnd(matchString52, matchString83);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeRange(matchString36, matchString84);
        java.lang.Class<?> wildcardClass86 = matchString85.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString2, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches("1", matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches("hi!", matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOr(matchString26, matchString31);
        java.lang.Class<?> wildcardClass33 = matchString26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makePattern(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString8);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString12, matchString16);
        st1920.automaton.MatchString matchString18 = null;
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString16, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNot(matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makePattern(matchString22);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString26, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOccurences(matchString22, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeRange(matchString20, matchString31);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString10, matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makePattern(matchString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString43, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeOccurences(matchString39, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makePattern(matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeAnd(matchString54, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnd(matchString57, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString55, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeOccurences(matchString51, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeOr(matchString49, matchString60);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeRange(matchString37, matchString49);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeOccurences(matchString34, matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeString(matchString4);
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches("1", matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makePattern(matchString9);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeOccurences(matchString9, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString7, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeRange(matchString4, matchString7);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString7);
        st1920.automaton.MatchString matchString23 = null;
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString7, matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("", "1a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "1a" + "'", str2.equals("1a"));
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeString(matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRange(matchString0, matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("1", "hi!1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "1hi!1" + "'", str2.equals("1hi!1"));
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeRange(matchString9, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = null;
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOr(matchString27, matchString29);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeString(matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString27, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makePattern(matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString44, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString44);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeAnd(matchString56, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeOr(matchString57, matchString59);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString42, matchString59);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeOccurences(matchString25, matchString59);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeOr(matchString24, matchString59);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!a1a", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString11);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("", "a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "a" + "'", str2.equals("a"));
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = null;
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeString(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!a1", "1a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!a11a" + "'", str2.equals("hi!a11a"));
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeString(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makePattern(matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString23, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeOccurences(matchString19, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makePattern(matchString33);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeOccurences(matchString33, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeAnd(matchString44, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makePattern(matchString45);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeAnd(matchString51, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString49, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOccurences(matchString45, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeOr(matchString43, matchString54);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeRange(matchString31, matchString43);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString60, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makePattern(matchString61);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeAnd(matchString64, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString65, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeOccurences(matchString61, matchString70);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeAnd(matchString72, matchString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makePattern(matchString73);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeAnd(matchString76, matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeAnd(matchString79, matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString77, matchString81);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeOccurences(matchString73, matchString82);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeOr(matchString71, matchString82);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeRange(matchString59, matchString71);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString85);
        st1920.automaton.MatchString matchString87 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString85);
        st1920.automaton.MatchString matchString88 = st1920.automaton.RegExpMatcher.makeOccurences(matchString58, matchString87);
        st1920.automaton.MatchString matchString89 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString87);
        st1920.automaton.MatchString matchString90 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString2, matchString29, matchString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString90);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString12);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeString(matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString21);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOccurences(matchString21, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOccurences(matchString18, matchString21);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString1, matchString12, matchString18);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString34);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makePattern(matchString40);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString44, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeOccurences(matchString40, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString38, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeRange(matchString37, matchString38);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOccurences(matchString33, matchString37);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeString(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("", "hi!a1aa");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString2, matchString6);
        st1920.automaton.MatchString matchString8 = null;
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString8);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean10 = st1920.automaton.RegExpMatcher.matches("", matchString8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("a", "hi!1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString2, matchString6);
        boolean boolean8 = st1920.automaton.RegExpMatcher.matches("a", matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString0, matchString12);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makePattern(matchString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString46, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurences(matchString42, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOr(matchString40, matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeRange(matchString28, matchString40);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString54);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeOccurences(matchString27, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNot(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNot(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("a", "a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString4);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString3);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString21, matchString25);
        st1920.automaton.MatchString matchString27 = null;
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString25);
        st1920.automaton.MatchString matchString30 = null;
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNot(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString33);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString37);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeOr(matchString36, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString42);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makePattern(matchString48);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeString(matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnd(matchString52, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString53, matchString57);
        st1920.automaton.MatchString matchString59 = null;
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString57, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNot(matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeAnd(matchString63, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString63);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeAnd(matchString68, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makePattern(matchString69);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeAnd(matchString72, matchString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeAnd(matchString75, matchString76);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString73, matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeOccurences(matchString69, matchString78);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString67, matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeRange(matchString66, matchString67);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString46, matchString62, matchString81);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString32, matchString41, matchString62);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeRange(matchString25, matchString62);
        java.lang.Class<?> wildcardClass85 = matchString62.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + true + "'", boolean2 == true);
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeString(matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makePattern(matchString17);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString21, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeOccurences(matchString17, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString26);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString15);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeString(matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makePattern(matchString36);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString40, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeOccurences(matchString36, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makePattern(matchString48);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeAnd(matchString51, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeAnd(matchString54, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString52, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeOccurences(matchString48, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeOr(matchString46, matchString57);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeRange(matchString34, matchString46);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString32);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString63);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean65 = st1920.automaton.RegExpMatcher.matches("hi!a1", matchString63);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: integer expected at position 38");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("1a", "1hi!1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNot(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString0);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString7);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOr(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString12);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makePattern(matchString18);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeString(matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString23, matchString27);
        st1920.automaton.MatchString matchString29 = null;
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString27, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNot(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString33);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makePattern(matchString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString43, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeOccurences(matchString39, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeRange(matchString36, matchString37);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString16, matchString32, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString2, matchString11, matchString32);
        st1920.automaton.MatchString matchString54 = null;
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeRange(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeAnd(matchString56, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString56);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeAnd(matchString61, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makePattern(matchString62);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnd(matchString65, matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeAnd(matchString68, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString66, matchString70);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeOccurences(matchString62, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString60, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeRange(matchString59, matchString60);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString59);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeAnd(matchString76, matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeAnd(matchString79, matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString77, matchString81);
        st1920.automaton.MatchString matchString83 = null;
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString81, matchString83);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString81);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeOccurences(matchString55, matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!1", "hi!a11a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!1hi!a11a" + "'", str2.equals("hi!1hi!a11a"));
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = null;
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeString(matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makePattern(matchString7);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString11, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeOccurences(matchString7, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeRange(matchString4, matchString5);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString19);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean21 = st1920.automaton.RegExpMatcher.matches("hi!a1a", matchString19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: interval syntax error at position 75");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makePattern(matchString7);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString14);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makePattern(matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString10, matchString17, matchString19);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeOr(matchString25, matchString27);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString32);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makePattern(matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeString(matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOr(matchString23, matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!a1aa", "a1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!a11a", "1hi!1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makePattern(matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString8, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeOccurences(matchString4, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makePattern(matchString16);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurences(matchString16, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeOr(matchString14, matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString14);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeString(matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makePattern(matchString35);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString39, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeOccurences(matchString35, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makePattern(matchString47);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString51, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeOccurences(matchString47, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeOr(matchString45, matchString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeRange(matchString33, matchString45);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeOccurences(matchString0, matchString31);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNot(matchString31);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeString(matchString4);
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches("1", matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makePattern(matchString9);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeOccurences(matchString9, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString7, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeRange(matchString4, matchString7);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makePattern(matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString27, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeOccurences(matchString23, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString34);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeString(matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makePattern(matchString43);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeAnd(matchString49, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString47, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOccurences(matchString43, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString40, matchString43);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString23, matchString34, matchString40);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeAnd(matchString56, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString56);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeAnd(matchString61, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makePattern(matchString62);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnd(matchString65, matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeAnd(matchString68, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString66, matchString70);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeOccurences(matchString62, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString60, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeRange(matchString59, matchString60);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeOccurences(matchString55, matchString59);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeRange(matchString4, matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString4);
        st1920.automaton.MatchString matchString6 = null;
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString7);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makePattern(matchString13);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString11, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeRange(matchString10, matchString11);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makePattern(matchString27);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString31, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOccurences(matchString27, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString38);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeString(matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makePattern(matchString47);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString51, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeOccurences(matchString47, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeOccurences(matchString44, matchString47);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString27, matchString38, matchString44);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString44);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeAnd(matchString61, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString61);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString6, matchString10, matchString64);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString64);
        boolean boolean68 = st1920.automaton.RegExpMatcher.matches("1a", matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString0, matchString12);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString26);
        java.lang.Class<?> wildcardClass29 = matchString26.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeOr(matchString13, matchString15);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString11, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeString(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makePattern(matchString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeString(matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = null;
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNot(matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNot(matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString29);
        java.lang.Class<?> wildcardClass32 = matchString13.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeString(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeRange(matchString9, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makePattern(matchString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString46, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurences(matchString42, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOr(matchString40, matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeRange(matchString28, matchString40);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString27, matchString40);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeString(matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNot(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeString(matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makePattern(matchString8);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString12, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeOccurences(matchString8, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makePattern(matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeOccurences(matchString20, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeRange(matchString6, matchString18);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString33);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString1, matchString33);
        boolean boolean37 = st1920.automaton.RegExpMatcher.matches("hi!a1aa", matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString4);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString29, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeOccurences(matchString25, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString25);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeOr(matchString38, matchString40);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString23, matchString40);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeString(matchString4);
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches("1", matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString8);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString7, matchString11);
        st1920.automaton.MatchString matchString13 = null;
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString14);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeOr(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString12, matchString17);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString4, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString21);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makePattern(matchString27);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString31, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOccurences(matchString27, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeRange(matchString24, matchString25);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makePattern(matchString41);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeAnd(matchString44, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString45, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeOccurences(matchString41, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnd(matchString52, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString52);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeAnd(matchString56, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeString(matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString60, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makePattern(matchString61);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeAnd(matchString64, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString65, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeOccurences(matchString61, matchString70);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeOccurences(matchString58, matchString61);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString41, matchString52, matchString58);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString58);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeOccurences(matchString4, matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!a1hi!a1a", "hi!1hi!a11a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!a1hi!a1ahi!1hi!a11a" + "'", str2.equals("hi!a1hi!a1ahi!1hi!a11a"));
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makePattern(matchString13);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOr(matchString11, matchString22);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNot(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString0);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString7);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOr(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString12);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makePattern(matchString18);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeString(matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString23, matchString27);
        st1920.automaton.MatchString matchString29 = null;
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString27, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNot(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString33);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makePattern(matchString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString43, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeOccurences(matchString39, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeRange(matchString36, matchString37);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString16, matchString32, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString2, matchString11, matchString32);
        java.lang.Class<?> wildcardClass54 = matchString2.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("a1", "1a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "a11a" + "'", str2.equals("a11a"));
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        st1920.automaton.MatchString matchString1 = null;
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNot(matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString1);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean4 = st1920.automaton.RegExpMatcher.matches("", matchString1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = null;
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makePattern(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString12);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNot(matchString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString15);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makePattern(matchString7);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString14);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makePattern(matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString10, matchString17, matchString19);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makePattern(matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString33, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeOccurences(matchString29, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString29);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeAnd(matchString44, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeOr(matchString42, matchString44);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString27, matchString44);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makePattern(matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeString(matchString31);
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches("1", matchString31);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString35);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = null;
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString41);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeOr(matchString40, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString39, matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeOr(matchString31, matchString44);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeString(matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makePattern(matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeString(matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString58, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString56, matchString60);
        st1920.automaton.MatchString matchString62 = null;
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString60, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNot(matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNot(matchString53);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnd(matchString49, matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString4);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString21, matchString25);
        st1920.automaton.MatchString matchString27 = null;
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNot(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makePattern(matchString31);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString35, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeOccurences(matchString31, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeRange(matchString29, matchString40);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makePattern(matchString7);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString14);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makePattern(matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString10, matchString17, matchString19);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeString(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makePattern(matchString28);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString32, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeOccurences(matchString28, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makePattern(matchString40);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString44, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeOccurences(matchString40, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeOr(matchString38, matchString49);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeRange(matchString26, matchString38);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeString(matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString58, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makePattern(matchString59);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnd(matchString65, matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString63, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeOccurences(matchString59, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makePattern(matchString71);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeAnd(matchString74, matchString75);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeAnd(matchString77, matchString78);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString75, matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeOccurences(matchString71, matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeOr(matchString69, matchString80);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeRange(matchString57, matchString69);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString83);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString84);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeOccurences(matchString24, matchString55);
        st1920.automaton.MatchString matchString87 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString86);
        st1920.automaton.MatchString matchString88 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString23, matchString86);
        java.lang.Class<?> wildcardClass89 = matchString88.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("a1", "hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "a1hi!hi!" + "'", str2.equals("a1hi!hi!"));
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        st1920.automaton.MatchString matchString1 = null;
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnd(matchString2, matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeOr(matchString3, matchString5);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeString(matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString3, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOr(matchString16, matchString18);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeString(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString16, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRange(matchString13, matchString26);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean28 = st1920.automaton.RegExpMatcher.matches("a11a", matchString26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: integer expected at position 38");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makePattern(matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString8, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeOccurences(matchString4, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makePattern(matchString16);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurences(matchString16, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeOr(matchString14, matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString14);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makePattern(matchString32);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString36, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeOccurences(matchString32, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makePattern(matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString44, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOr(matchString42, matchString53);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeRange(matchString30, matchString42);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeOccurences(matchString29, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString29);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeString(matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNot(matchString61);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString61);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeAnd(matchString66, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString66);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString65, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeString(matchString65);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeRange(matchString64, matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString2, matchString6);
        st1920.automaton.MatchString matchString8 = null;
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNot(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makePattern(matchString12);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString16, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeOccurences(matchString12, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeRange(matchString10, matchString21);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = null;
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeOr(matchString28, matchString30);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeString(matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString28, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString26, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeAnd(matchString44, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makePattern(matchString45);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeAnd(matchString51, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString49, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOccurences(matchString45, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString45);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnd(matchString57, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString60, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeOr(matchString58, matchString60);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString43, matchString60);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeOccurences(matchString26, matchString60);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeOr(matchString25, matchString60);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString66, matchString69);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString30, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeOccurences(matchString26, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOr(matchString24, matchString35);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString24);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makePattern(matchString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString46, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurences(matchString42, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makePattern(matchString54);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnd(matchString57, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString60, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString58, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeOccurences(matchString54, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeOr(matchString52, matchString63);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeRange(matchString40, matchString52);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString66);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeOccurences(matchString39, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeRange(matchString1, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("a11a", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "a11a" + "'", str2.equals("a11a"));
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNot(matchString0);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeString(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makePattern(matchString7);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString11, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeOccurences(matchString7, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makePattern(matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString23, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeOccurences(matchString19, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeOr(matchString17, matchString28);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeRange(matchString5, matchString17);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString32);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString0, matchString32);
        st1920.automaton.MatchString matchString36 = null;
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeOr(matchString38, matchString40);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeAnd(matchString44, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeString(matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString38, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString36, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeOr(matchString51, matchString53);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnd(matchString57, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeString(matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString51, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeRange(matchString48, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString48);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeString(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makePattern(matchString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeString(matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = null;
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNot(matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNot(matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString13);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makePattern(matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeString(matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString39, matchString43);
        st1920.automaton.MatchString matchString45 = null;
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString43, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNot(matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString47);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!1hi!a11a", "hi!a1hi!a1ahi!1hi!a11a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!1hi!a11ahi!a1hi!a1ahi!1hi!a11a" + "'", str2.equals("hi!1hi!a11ahi!a1hi!a1ahi!1hi!a11a"));
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeRange(matchString9, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = null;
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOr(matchString27, matchString29);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeString(matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString27, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makePattern(matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString44, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString44);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeAnd(matchString56, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeOr(matchString57, matchString59);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString42, matchString59);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeOccurences(matchString25, matchString59);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeOr(matchString24, matchString59);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeAnd(matchString66, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString65, matchString68);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString70);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString70);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeString(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("1", "a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = null;
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeString(matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeString(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRange(matchString24, matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makePattern(matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString8, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeOccurences(matchString4, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makePattern(matchString16);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurences(matchString16, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeOr(matchString14, matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString14);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOr(matchString32, matchString34);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "" + "'", str2.equals(""));
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("a", "1hi!1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeString(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = null;
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNot(matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNot(matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNot(matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeString(matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makePattern(matchString22);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString26, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOccurences(matchString22, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makePattern(matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString38, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeOccurences(matchString34, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeOr(matchString32, matchString43);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeRange(matchString20, matchString32);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeString(matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnd(matchString52, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makePattern(matchString53);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeAnd(matchString56, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString57, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeOccurences(matchString53, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeAnd(matchString64, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makePattern(matchString65);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeAnd(matchString68, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeAnd(matchString71, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString69, matchString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeOccurences(matchString65, matchString74);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeOr(matchString63, matchString74);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeRange(matchString51, matchString63);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeAnd(matchString49, matchString78);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeOccurences(matchString18, matchString49);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString16, matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString14, matchString18);
        st1920.automaton.MatchString matchString20 = null;
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString23);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString2, matchString6);
        st1920.automaton.MatchString matchString8 = null;
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNot(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        boolean boolean12 = st1920.automaton.RegExpMatcher.matches("", matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("a11a", "hi!a1hi!a1ahi!1hi!a11a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makePattern(matchString7);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString14);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makePattern(matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString10, matchString17, matchString19);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString22);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeString(matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNot(matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeString(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makePattern(matchString32);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString36, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeOccurences(matchString32, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makePattern(matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString44, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOr(matchString42, matchString53);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeRange(matchString30, matchString42);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString57);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString25, matchString57);
        st1920.automaton.MatchString matchString61 = null;
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnd(matchString65, matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeOr(matchString63, matchString65);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeAnd(matchString69, matchString70);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeString(matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString63, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString61, matchString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeAnd(matchString75, matchString76);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeAnd(matchString78, matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeOr(matchString76, matchString78);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeAnd(matchString82, matchString83);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeString(matchString84);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString76, matchString85);
        st1920.automaton.MatchString matchString87 = st1920.automaton.RegExpMatcher.makeRange(matchString73, matchString86);
        st1920.automaton.MatchString matchString88 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString73);
        st1920.automaton.MatchString matchString89 = st1920.automaton.RegExpMatcher.makeOr(matchString22, matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString89);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString4);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString3);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString21, matchString25);
        st1920.automaton.MatchString matchString27 = null;
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString25);
        st1920.automaton.MatchString matchString30 = null;
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNot(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString33);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString37);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeOr(matchString36, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString42);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makePattern(matchString48);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeString(matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnd(matchString52, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString53, matchString57);
        st1920.automaton.MatchString matchString59 = null;
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString57, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNot(matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeAnd(matchString63, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString63);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeAnd(matchString68, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makePattern(matchString69);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeAnd(matchString72, matchString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeAnd(matchString75, matchString76);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString73, matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeOccurences(matchString69, matchString78);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString67, matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeRange(matchString66, matchString67);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString46, matchString62, matchString81);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString32, matchString41, matchString62);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeRange(matchString25, matchString62);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnd(matchString2, matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString7);
        st1920.automaton.MatchString matchString9 = null;
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString7, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNot(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makePattern(matchString13);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeRange(matchString11, matchString22);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRange(matchString0, matchString25);
        java.lang.Class<?> wildcardClass28 = matchString27.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makePattern(matchString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeString(matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = null;
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNot(matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNot(matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString13);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makePattern(matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeString(matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString39, matchString43);
        st1920.automaton.MatchString matchString45 = null;
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString43, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNot(matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString47);
        java.lang.Class<?> wildcardClass50 = matchString47.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString4);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString3);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString21, matchString25);
        st1920.automaton.MatchString matchString27 = null;
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString25);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makePattern(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString14, matchString18);
        st1920.automaton.MatchString matchString20 = null;
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString23);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString27);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makePattern(matchString33);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeOccurences(matchString33, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString31, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeRange(matchString30, matchString31);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString30);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString52);
        st1920.automaton.MatchString matchString54 = null;
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString52, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString52);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNot(matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString58, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makePattern(matchString59);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString0, matchString57, matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!1hi!a11a", "hi!hi!");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!1hi!a11ahi!hi!" + "'", str2.equals("hi!1hi!a11ahi!hi!"));
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString4);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makePattern(matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeOccurences(matchString20, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString31);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeString(matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makePattern(matchString40);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString44, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeOccurences(matchString40, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeOccurences(matchString37, matchString40);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString20, matchString31, matchString37);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString37);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makePattern(matchString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString60, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeOccurences(matchString56, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makePattern(matchString68);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeAnd(matchString71, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeAnd(matchString74, matchString75);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString72, matchString76);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeOccurences(matchString68, matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeOr(matchString66, matchString77);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeRange(matchString54, matchString66);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString3, matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeString(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString2);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makePattern(matchString27);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeString(matchString27);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOr(matchString25, matchString27);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString32);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNot(matchString35);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString14, matchString18);
        st1920.automaton.MatchString matchString20 = null;
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString23);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("a11a", "1a1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("a1hi!hi!", "1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "a1hi!hi!1" + "'", str2.equals("a1hi!hi!1"));
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeRange(matchString9, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = null;
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOr(matchString27, matchString29);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeString(matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString27, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makePattern(matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString44, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString44);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeAnd(matchString56, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeOr(matchString57, matchString59);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString42, matchString59);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeOccurences(matchString25, matchString59);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeOr(matchString24, matchString59);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeAnd(matchString66, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString65, matchString68);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString70);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makePattern(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString0, matchString12);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString29, matchString33);
        st1920.automaton.MatchString matchString35 = null;
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString33, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeString(matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNot(matchString38);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeRange(matchString27, matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makePattern(matchString7);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString7);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makePattern(matchString18);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString22, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeOccurences(matchString18, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString18);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeOr(matchString31, matchString33);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString16, matchString33);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeString(matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNot(matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeRange(matchString11, matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("a", "1hi!1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "a1hi!1" + "'", str2.equals("a1hi!1"));
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnd(matchString2, matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString2);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString8);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOr(matchString7, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString11);
        boolean boolean14 = st1920.automaton.RegExpMatcher.matches("hi!1hi!a11a", matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNot(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString0);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString7);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOr(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString12);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makePattern(matchString18);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeString(matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString23, matchString27);
        st1920.automaton.MatchString matchString29 = null;
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString27, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNot(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString33);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makePattern(matchString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString43, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeOccurences(matchString39, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeRange(matchString36, matchString37);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString16, matchString32, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString2, matchString11, matchString32);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNot(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches("hi!", matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOr(matchString26, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makePattern(matchString38);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeString(matchString38);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeRange(matchString36, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeAnd(matchString44, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString44);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString43, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString31, matchString36, matchString43);
        st1920.automaton.MatchString matchString50 = null;
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeAnd(matchString51, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString51);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOr(matchString50, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeAnd(matchString56, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makePattern(matchString57);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeString(matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeAnd(matchString61, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeAnd(matchString64, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeOr(matchString62, matchString64);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeAnd(matchString68, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makePattern(matchString69);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString60, matchString67, matchString69);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString50, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeOccurences(matchString31, matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeString(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = null;
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNot(matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString28);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makePattern(matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString38, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeOccurences(matchString34, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString32, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeRange(matchString31, matchString32);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeRange(matchString27, matchString46);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeString(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("1a1", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeString(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeString(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString2);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makePattern(matchString27);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeString(matchString27);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOr(matchString25, matchString27);
        st1920.automaton.MatchString matchString32 = null;
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeOr(matchString34, matchString36);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeString(matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString34, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString32, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeAnd(matchString49, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOr(matchString47, matchString49);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeString(matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString47, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeRange(matchString44, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makePattern(matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeAnd(matchString61, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makePattern(matchString62);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnd(matchString65, matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeAnd(matchString68, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString66, matchString70);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeOccurences(matchString62, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeAnd(matchString73, matchString74);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makePattern(matchString74);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeAnd(matchString77, matchString78);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeAnd(matchString80, matchString81);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString78, matchString82);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeOccurences(matchString74, matchString83);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeOr(matchString72, matchString83);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeRange(matchString60, matchString72);
        st1920.automaton.MatchString matchString87 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString59, matchString72);
        st1920.automaton.MatchString matchString88 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString27, matchString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString88);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makePattern(matchString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString46, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurences(matchString42, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOr(matchString40, matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeRange(matchString28, matchString40);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString27, matchString40);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString27);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString58, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makePattern(matchString59);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnd(matchString65, matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString63, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeOccurences(matchString59, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makePattern(matchString71);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeAnd(matchString74, matchString75);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeAnd(matchString77, matchString78);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString75, matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeOccurences(matchString71, matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeOr(matchString69, matchString80);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeRange(matchString57, matchString69);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString56, matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makePattern(matchString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeString(matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = null;
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNot(matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNot(matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString29);
        st1920.automaton.MatchString matchString32 = null;
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makePattern(matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString8, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeOccurences(matchString4, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makePattern(matchString16);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurences(matchString16, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeOr(matchString14, matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString14);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makePattern(matchString32);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString36, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeOccurences(matchString32, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makePattern(matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString44, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOr(matchString42, matchString53);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeRange(matchString30, matchString42);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeOccurences(matchString29, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString29);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeString(matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNot(matchString61);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString61);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString0);
        java.lang.Class<?> wildcardClass66 = matchString65.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString11, matchString15);
        st1920.automaton.MatchString matchString17 = null;
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNot(matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString21);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOccurences(matchString21, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeRange(matchString19, matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = null;
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeOr(matchString37, matchString39);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeString(matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString37, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString35, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeAnd(matchString49, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makePattern(matchString54);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnd(matchString57, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString60, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString58, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeOccurences(matchString54, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeAnd(matchString52, matchString54);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeAnd(matchString66, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeAnd(matchString69, matchString70);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeOr(matchString67, matchString69);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString52, matchString69);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeOccurences(matchString35, matchString69);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeOr(matchString34, matchString69);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString69);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeRange(matchString8, matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeOr(matchString13, matchString15);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString11, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeString(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNot(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString23);
        st1920.automaton.MatchString matchString26 = null;
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString27);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOr(matchString26, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makePattern(matchString33);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeString(matchString33);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOr(matchString26, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makePattern(matchString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeString(matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString44, matchString48);
        st1920.automaton.MatchString matchString50 = null;
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNot(matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makePattern(matchString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString60, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeOccurences(matchString56, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makePattern(matchString68);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeAnd(matchString71, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeAnd(matchString74, matchString75);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString72, matchString76);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeOccurences(matchString68, matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeOr(matchString66, matchString77);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeRange(matchString54, matchString66);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString80);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeOr(matchString52, matchString80);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeRange(matchString26, matchString80);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString12, matchString80);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = st1920.automaton.RegExpMatcher.matches("", matchString85);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: integer expected at position 38");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makePattern(matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeString(matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = null;
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString38, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNot(matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNot(matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNot(matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeRange(matchString26, matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeRange(matchString9, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNot(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString7, matchString11);
        st1920.automaton.MatchString matchString13 = null;
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNot(matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString13);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNot(matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString5, matchString11, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!1hi!a11ahi!a1hi!a1ahi!1hi!a11a", "hi!a1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!1hi!a11ahi!a1hi!a1ahi!1hi!a11ahi!a1" + "'", str2.equals("hi!1hi!a11ahi!a1hi!a1ahi!1hi!a11ahi!a1"));
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makePattern(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString8);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makePattern(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString13);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makePattern(matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString23, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeOccurences(matchString19, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeRange(matchString16, matchString17);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makePattern(matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString8, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeOccurences(matchString4, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makePattern(matchString16);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurences(matchString16, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeOr(matchString14, matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString14);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makePattern(matchString32);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString36, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeOccurences(matchString32, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makePattern(matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString44, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOr(matchString42, matchString53);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeRange(matchString30, matchString42);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeOccurences(matchString29, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString29);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeOr(matchString3, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makePattern(matchString13);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString29, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeOccurences(matchString25, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeOr(matchString23, matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeRange(matchString11, matchString23);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString38);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeRange(matchString7, matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeRange(matchString9, matchString20);
        st1920.automaton.MatchString matchString23 = null;
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString24);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString28, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeRange(matchString27, matchString28);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makePattern(matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString44, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString55);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeString(matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeAnd(matchString63, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makePattern(matchString64);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString68, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeOccurences(matchString64, matchString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeOccurences(matchString61, matchString64);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString44, matchString55, matchString61);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString27, matchString61);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeAnd(matchString78, matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString78);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString81);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString23, matchString27, matchString81);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeOr(matchString20, matchString83);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString87 = st1920.automaton.RegExpMatcher.makeAnd(matchString85, matchString86);
        st1920.automaton.MatchString matchString88 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString89 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString90 = st1920.automaton.RegExpMatcher.makeAnd(matchString88, matchString89);
        st1920.automaton.MatchString matchString91 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString86, matchString90);
        st1920.automaton.MatchString matchString92 = null;
        st1920.automaton.MatchString matchString93 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString90, matchString92);
        st1920.automaton.MatchString matchString94 = st1920.automaton.RegExpMatcher.makeNot(matchString93);
        st1920.automaton.MatchString matchString95 = st1920.automaton.RegExpMatcher.makeString(matchString94);
        st1920.automaton.MatchString matchString96 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString84, matchString94);
        st1920.automaton.MatchString matchString97 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString90);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString91);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString93);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString94);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString95);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString96);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString97);
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makePattern(matchString12);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString16, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeOccurences(matchString12, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString23);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeString(matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makePattern(matchString32);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString36, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeOccurences(matchString32, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeOccurences(matchString29, matchString32);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString12, matchString23, matchString29);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makePattern(matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeAnd(matchString54, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnd(matchString57, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString55, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeOccurences(matchString51, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString49, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeRange(matchString48, matchString49);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeOccurences(matchString44, matchString48);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNot(matchString44);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString9, matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString18);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString28);
        st1920.automaton.MatchString matchString30 = null;
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNot(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNot(matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString22, matchString28, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeString(matchString28);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeOccurences(matchString16, matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeString(matchString4);
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches("1", matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString8);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString7, matchString11);
        st1920.automaton.MatchString matchString13 = null;
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString14);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeOr(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString12, matchString17);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString4, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString25);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches("hi!", matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOr(matchString26, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNot(matchString31);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!a1aa", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!a1aa" + "'", str2.equals("hi!a1aa"));
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!a1hi!a1ahi!1hi!a11a", "");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makePattern(matchString7);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString12, matchString16);
        st1920.automaton.MatchString matchString18 = null;
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString16, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNot(matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString22);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makePattern(matchString28);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString32, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeOccurences(matchString28, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString26, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeRange(matchString25, matchString26);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString5, matchString21, matchString40);
        boolean boolean42 = st1920.automaton.RegExpMatcher.matches("hi!1hi!a11ahi!a1hi!a1ahi!1hi!a11ahi!a1", matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString1);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeString(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makePattern(matchString12);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString16, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeOccurences(matchString12, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makePattern(matchString24);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString28, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeOccurences(matchString24, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeOr(matchString22, matchString33);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeRange(matchString10, matchString22);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makePattern(matchString37);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString2, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString2);
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches("a1", matchString2);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString2);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeString(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = null;
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNot(matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makePattern(matchString18);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString22, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeOccurences(matchString18, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeOr(matchString28, matchString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeRange(matchString16, matchString28);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeOr(matchString14, matchString42);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeString(matchString14);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeString(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNot(matchString1);
        boolean boolean3 = st1920.automaton.RegExpMatcher.matches("", matchString1);
        st1920.automaton.MatchString matchString4 = null;
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString5);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeOr(matchString4, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeString(matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOr(matchString16, matchString18);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makePattern(matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString14, matchString21, matchString23);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString28);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNot(matchString31);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString1, matchString26, matchString33);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString37);
        boolean boolean44 = st1920.automaton.RegExpMatcher.matches("a1", matchString37);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeOr(matchString34, matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + true + "'", boolean3 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = null;
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnd(matchString2, matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeOr(matchString3, matchString5);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeString(matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString3, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeRange(matchString0, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString11);
        java.lang.Class<?> wildcardClass13 = matchString12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeString(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = null;
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNot(matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makePattern(matchString18);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString22, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeOccurences(matchString18, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeOr(matchString28, matchString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeRange(matchString16, matchString28);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeOr(matchString14, matchString42);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString14);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeAnd(matchString49, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makePattern(matchString50);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeAnd(matchString56, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString54, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeOccurences(matchString50, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makePattern(matchString63);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeString(matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString68, matchString72);
        st1920.automaton.MatchString matchString74 = null;
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString72, matchString74);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNot(matchString75);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeAnd(matchString65, matchString76);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeNot(matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeOccurences(matchString61, matchString77);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeOr(matchString46, matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString23);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString0, matchString12);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makePattern(matchString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString46, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurences(matchString42, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOr(matchString40, matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeRange(matchString28, matchString40);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString54);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeOccurences(matchString27, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makePattern(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeString(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString11);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeOr(matchString24, matchString26);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString26);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeString(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNot(matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makePattern(matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString38, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeOccurences(matchString34, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString46, matchString50);
        st1920.automaton.MatchString matchString52 = null;
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString50, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString34, matchString52);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeString(matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString54, matchString55);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString57, matchString58);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString31, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = null;
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString1);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString8, matchString12);
        st1920.automaton.MatchString matchString14 = null;
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString12, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNot(matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makePattern(matchString18);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString22, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeOccurences(matchString18, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRange(matchString16, matchString27);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString6, matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString23);
        st1920.automaton.MatchString matchString26 = null;
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString27);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOr(matchString26, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makePattern(matchString33);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeString(matchString33);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOr(matchString26, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makePattern(matchString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeString(matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString44, matchString48);
        st1920.automaton.MatchString matchString50 = null;
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString48, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNot(matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makePattern(matchString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString60, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeOccurences(matchString56, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makePattern(matchString68);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeAnd(matchString71, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeAnd(matchString74, matchString75);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString72, matchString76);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeOccurences(matchString68, matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeOr(matchString66, matchString77);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeRange(matchString54, matchString66);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString80);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeOr(matchString52, matchString80);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeRange(matchString26, matchString80);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString12, matchString80);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeRange(matchString0, matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeOr(matchString13, matchString15);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString11, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeString(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeString(matchString4);
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches("1", matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makePattern(matchString9);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeOccurences(matchString9, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString7, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeRange(matchString4, matchString7);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString22);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString26);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeOr(matchString25, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!a1hi!a1ahi!1hi!a11a", "1a1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!a1hi!a1ahi!1hi!a11a1a1" + "'", str2.equals("hi!a1hi!a1ahi!1hi!a11a1a1"));
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makePattern(matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeString(matchString31);
        boolean boolean33 = st1920.automaton.RegExpMatcher.matches("1", matchString31);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString35);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = null;
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString41);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeOr(matchString40, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString39, matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeOr(matchString31, matchString44);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeOr(matchString12, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeString(matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeOr(matchString51, matchString53);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnd(matchString57, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString58);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makePattern(matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeAnd(matchString63, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeAnd(matchString66, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeOr(matchString64, matchString66);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeAnd(matchString66, matchString71);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makePattern(matchString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString74);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeAnd(matchString76, matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makePattern(matchString77);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeAnd(matchString80, matchString81);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeAnd(matchString83, matchString84);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString81, matchString85);
        st1920.automaton.MatchString matchString87 = st1920.automaton.RegExpMatcher.makeOccurences(matchString77, matchString86);
        st1920.automaton.MatchString matchString88 = st1920.automaton.RegExpMatcher.makeOr(matchString74, matchString86);
        st1920.automaton.MatchString matchString89 = st1920.automaton.RegExpMatcher.makeOccurences(matchString62, matchString86);
        st1920.automaton.MatchString matchString90 = st1920.automaton.RegExpMatcher.makeRange(matchString49, matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString90);
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        st1920.automaton.MatchString matchString1 = null;
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnd(matchString2, matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeOr(matchString3, matchString5);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeString(matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString3, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOr(matchString16, matchString18);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeString(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString16, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRange(matchString13, matchString26);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeString(matchString32);
        boolean boolean34 = st1920.automaton.RegExpMatcher.matches("1", matchString32);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString36);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString35, matchString39);
        st1920.automaton.MatchString matchString41 = null;
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString42);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeOr(matchString41, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString40, matchString45);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeOr(matchString32, matchString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeOr(matchString13, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeString(matchString49);
        boolean boolean51 = st1920.automaton.RegExpMatcher.matches("a1hi!1", matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeString(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNot(matchString0);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString3);
        java.lang.Class<?> wildcardClass5 = matchString4.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeString(matchString4);
        boolean boolean6 = st1920.automaton.RegExpMatcher.matches("1", matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makePattern(matchString8);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString12, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeOccurences(matchString8, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = null;
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeOccurences(matchString8, matchString26);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeString(matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNot(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnd(matchString2, matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makePattern(matchString3);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeString(matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString8, matchString12);
        st1920.automaton.MatchString matchString14 = null;
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString12, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNot(matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makePattern(matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeOccurences(matchString20, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makePattern(matchString32);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString36, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeOccurences(matchString32, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeOr(matchString30, matchString41);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeRange(matchString18, matchString30);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString44);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeOr(matchString16, matchString44);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString16);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        st1920.automaton.MatchString matchString1 = null;
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnd(matchString2, matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeOr(matchString3, matchString5);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeString(matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString3, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOr(matchString16, matchString18);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeString(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString16, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRange(matchString13, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        boolean boolean29 = st1920.automaton.RegExpMatcher.matches("1", matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNot(matchString1);
        java.lang.Class<?> wildcardClass13 = matchString12.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNot(matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString2);
        boolean boolean4 = st1920.automaton.RegExpMatcher.matches("a", matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + false + "'", boolean4 == false);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makePattern(matchString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeString(matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = null;
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNot(matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNot(matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString13);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makePattern(matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeString(matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString39, matchString43);
        st1920.automaton.MatchString matchString45 = null;
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString43, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNot(matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString47);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeString(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString28);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makePattern(matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString38, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeOccurences(matchString34, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString32, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeRange(matchString31, matchString32);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeRange(matchString27, matchString46);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString46);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString49);
        java.lang.Class<?> wildcardClass51 = matchString49.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makePattern(matchString13);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOr(matchString11, matchString22);
        st1920.automaton.MatchString matchString25 = null;
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString26);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeOr(matchString25, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makePattern(matchString32);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeString(matchString32);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeOr(matchString25, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makePattern(matchString38);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeString(matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString43, matchString47);
        st1920.automaton.MatchString matchString49 = null;
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString47, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNot(matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeAnd(matchString54, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makePattern(matchString55);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString58, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeAnd(matchString61, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString59, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeOccurences(matchString55, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeAnd(matchString66, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makePattern(matchString67);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeAnd(matchString73, matchString74);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString71, matchString75);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeOccurences(matchString67, matchString76);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeOr(matchString65, matchString76);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeRange(matchString53, matchString65);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString79);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeOr(matchString51, matchString79);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeRange(matchString25, matchString79);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString11, matchString79);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeString(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString18, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOccurences(matchString14, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString12, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString10, matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        boolean boolean5 = st1920.automaton.RegExpMatcher.matches("1a", matchString1);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString8, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString8);
        boolean boolean15 = st1920.automaton.RegExpMatcher.matches("a1", matchString8);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makePattern(matchString18);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString22, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeOccurences(matchString18, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeOr(matchString28, matchString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeRange(matchString16, matchString28);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString1, matchString8, matchString43);
        st1920.automaton.MatchString matchString45 = null;
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString46);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeOr(matchString45, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeString(matchString49);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOr(matchString8, matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeString(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString2);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makePattern(matchString27);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeString(matchString27);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOr(matchString25, matchString27);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makePattern(matchString33);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeOccurences(matchString33, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeOr(matchString27, matchString33);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeString(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString2, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeRange(matchString2, matchString20);
        st1920.automaton.MatchString matchString25 = null;
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString12);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeString(matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString21);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOccurences(matchString21, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOccurences(matchString18, matchString21);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString1, matchString12, matchString18);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString34);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makePattern(matchString40);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString44, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeOccurences(matchString40, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString38, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeRange(matchString37, matchString38);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOccurences(matchString33, matchString37);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString33);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNot(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString2, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString10 = null;
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makePattern(matchString13);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString29);
        st1920.automaton.MatchString matchString31 = null;
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString29, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeOccurences(matchString13, matchString31);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeString(matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString0, matchString9, matchString33);
        st1920.automaton.MatchString matchString38 = null;
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeOr(matchString40, matchString42);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeString(matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString40, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString38, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnd(matchString52, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeOr(matchString53, matchString55);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeString(matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString53, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeRange(matchString50, matchString63);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeAnd(matchString66, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makePattern(matchString67);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeString(matchString69);
        boolean boolean71 = st1920.automaton.RegExpMatcher.matches("1", matchString69);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeAnd(matchString73, matchString74);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString73);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString72, matchString76);
        st1920.automaton.MatchString matchString78 = null;
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeAnd(matchString79, matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString79);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeOr(matchString78, matchString82);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString77, matchString82);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeOr(matchString69, matchString82);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeOr(matchString50, matchString85);
        st1920.automaton.MatchString matchString87 = st1920.automaton.RegExpMatcher.makeOccurences(matchString33, matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString87);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makePattern(matchString2);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeString(matchString2);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeString(matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makePattern(matchString10);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString14, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOccurences(matchString10, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makePattern(matchString22);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString26, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOccurences(matchString22, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeOr(matchString20, matchString31);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeRange(matchString8, matchString20);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makePattern(matchString39);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeString(matchString39);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeString(matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makePattern(matchString47);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString51, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeOccurences(matchString47, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString58, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makePattern(matchString59);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnd(matchString65, matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString63, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeOccurences(matchString59, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeOr(matchString57, matchString68);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeRange(matchString45, matchString57);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeOr(matchString39, matchString73);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString39);
        boolean boolean76 = st1920.automaton.RegExpMatcher.matches("hi!a1a", matchString39);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeString(matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeOr(matchString20, matchString27);
        st1920.automaton.MatchString matchString30 = null;
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeOr(matchString32, matchString34);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeString(matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString32, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString30, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeAnd(matchString44, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makePattern(matchString45);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeString(matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeAnd(matchString49, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnd(matchString52, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString50, matchString54);
        st1920.automaton.MatchString matchString56 = null;
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString54, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNot(matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString27, matchString42, matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeString(matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNot(matchString12);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString4);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeString(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNot(matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makePattern(matchString28);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeString(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString33, matchString37);
        st1920.automaton.MatchString matchString39 = null;
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNot(matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNot(matchString42);
        st1920.automaton.MatchString matchString44 = null;
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeOr(matchString44, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makePattern(matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeString(matchString51);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOr(matchString44, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString26, matchString42, matchString54);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString54);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makePattern(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!hi!", "hi!a1hi!a1ahi!1hi!a11a1a1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = null;
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString14, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNot(matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makePattern(matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeOccurences(matchString20, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeRange(matchString18, matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = null;
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeOr(matchString36, matchString38);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeString(matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString36, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnd(matchString52, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makePattern(matchString53);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeAnd(matchString56, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString57, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeOccurences(matchString53, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString51, matchString53);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnd(matchString65, matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeAnd(matchString68, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeOr(matchString66, matchString68);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString51, matchString68);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeOccurences(matchString34, matchString68);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeOr(matchString33, matchString68);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeAnd(matchString75, matchString76);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString74, matchString77);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString1, matchString8, matchString77);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeNot(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString8);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString8);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString13);
        boolean boolean17 = st1920.automaton.RegExpMatcher.matches("1a", matchString13);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString20, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString20);
        boolean boolean27 = st1920.automaton.RegExpMatcher.matches("a1", matchString20);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makePattern(matchString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString46, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurences(matchString42, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOr(matchString40, matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeRange(matchString28, matchString40);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString13, matchString20, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString11, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeString(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        st1920.automaton.MatchString matchString1 = null;
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnd(matchString2, matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString2);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makePattern(matchString8);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString8);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString11);
        boolean boolean13 = st1920.automaton.RegExpMatcher.matches("hi!1hi!a11ahi!hi!", matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString2, matchString6);
        st1920.automaton.MatchString matchString8 = null;
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNot(matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makePattern(matchString12);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString16, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeOccurences(matchString12, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeRange(matchString10, matchString21);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = null;
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeOr(matchString28, matchString30);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeString(matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString28, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString26, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeAnd(matchString44, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makePattern(matchString45);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeAnd(matchString51, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString49, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOccurences(matchString45, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString45);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnd(matchString57, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString60, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeOr(matchString58, matchString60);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString43, matchString60);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeOccurences(matchString26, matchString60);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeOr(matchString25, matchString60);
        boolean boolean67 = st1920.automaton.RegExpMatcher.matches("", matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString8 = null;
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString8);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString11);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString15);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeOr(matchString14, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeString(matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString31, matchString35);
        st1920.automaton.MatchString matchString37 = null;
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString35, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNot(matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString41);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makePattern(matchString47);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString51, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeOccurences(matchString47, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString45, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeRange(matchString44, matchString45);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString24, matchString40, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString10, matchString19, matchString40);
        st1920.automaton.MatchString matchString62 = null;
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeRange(matchString61, matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString7, matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        st1920.automaton.MatchString matchString7 = null;
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNot(matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeAnd(matchString10, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makePattern(matchString11);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString15, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString11, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeRange(matchString9, matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString24);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makePattern(matchString24);
        st1920.automaton.MatchString matchString32 = null;
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOr(matchString35, matchString37);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString46, matchString50);
        st1920.automaton.MatchString matchString52 = null;
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString50, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNot(matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makePattern(matchString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString60, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeOccurences(matchString56, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeRange(matchString54, matchString65);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString44, matchString68);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString20, matchString33, matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeString(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString6, matchString10);
        st1920.automaton.MatchString matchString12 = null;
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNot(matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNot(matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString28);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makePattern(matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString38, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeOccurences(matchString34, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString32, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeRange(matchString31, matchString32);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeRange(matchString27, matchString46);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString46);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString12);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeAnd(matchString16, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeString(matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString21);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOccurences(matchString21, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOccurences(matchString18, matchString21);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString1, matchString12, matchString18);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeString(matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNot(matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString8);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makePattern(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeAnd(matchString13, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString13);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNot(matchString16);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString21);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString26, matchString30);
        st1920.automaton.MatchString matchString32 = null;
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString30, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNot(matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makePattern(matchString38);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeAnd(matchString44, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString42, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeOccurences(matchString38, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeAnd(matchString49, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makePattern(matchString50);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeAnd(matchString53, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeAnd(matchString56, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString54, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeOccurences(matchString50, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeOr(matchString48, matchString59);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeRange(matchString36, matchString48);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString62);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString62);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeOr(matchString34, matchString62);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeRange(matchString11, matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNot(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString0);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNot(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!a1", "hi!a1hi!a1ahi!1hi!a11a1a1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString2, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString2);
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches("a1", matchString2);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString2);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNot(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeString(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makePattern(matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString30, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makePattern(matchString42);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString46, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurences(matchString42, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOr(matchString40, matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeRange(matchString28, matchString40);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString27, matchString40);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString27);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeString(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString8);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makePattern(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString4);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeAnd(matchString19, matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makePattern(matchString20);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeAnd(matchString23, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeAnd(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString24, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeOccurences(matchString20, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString31);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeString(matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeAnd(matchString39, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makePattern(matchString40);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString44, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeOccurences(matchString40, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeOccurences(matchString37, matchString40);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString20, matchString31, matchString37);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString37);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeString(matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makePattern(matchString56);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeAnd(matchString59, matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString60, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeOccurences(matchString56, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString68, matchString72);
        st1920.automaton.MatchString matchString74 = null;
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString72, matchString74);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeOccurences(matchString56, matchString74);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeString(matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeAnd(matchString76, matchString77);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeAnd(matchString79, matchString80);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeAnd(matchString54, matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString7, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString7);
        st1920.automaton.MatchString matchString14 = null;
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString15);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeOr(matchString14, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString21);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnd(matchString25, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOr(matchString26, matchString28);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makePattern(matchString33);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString24, matchString31, matchString33);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString14, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeString(matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makePattern(matchString43);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeAnd(matchString49, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString47, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOccurences(matchString43, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOccurences(matchString40, matchString43);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString58, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeOr(matchString56, matchString58);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeRange(matchString40, matchString58);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString40);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeAnd(matchString64, matchString65);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makePattern(matchString65);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeString(matchString65);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeOr(matchString63, matchString65);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makePattern(matchString71);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeAnd(matchString74, matchString75);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeAnd(matchString77, matchString78);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString75, matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeOccurences(matchString71, matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeOr(matchString65, matchString71);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makePattern(matchString82);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString13, matchString14, matchString82);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString5, matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("a1hi!hi!", "a1hi!1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "a1hi!hi!a1hi!1" + "'", str2.equals("a1hi!hi!a1hi!1"));
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeString(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNot(matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makePattern(matchString28);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeString(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString33, matchString37);
        st1920.automaton.MatchString matchString39 = null;
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNot(matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNot(matchString42);
        st1920.automaton.MatchString matchString44 = null;
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeOr(matchString44, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makePattern(matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeString(matchString51);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOr(matchString44, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString26, matchString42, matchString54);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString58, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makePattern(matchString59);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnd(matchString65, matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString63, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeOccurences(matchString59, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString57, matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeAnd(matchString71, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makePattern(matchString72);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeString(matchString74);
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeAnd(matchString76, matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeAnd(matchString79, matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString77, matchString81);
        st1920.automaton.MatchString matchString83 = null;
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString81, matchString83);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeNot(matchString84);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeAnd(matchString74, matchString85);
        st1920.automaton.MatchString matchString87 = st1920.automaton.RegExpMatcher.makeNot(matchString86);
        st1920.automaton.MatchString matchString88 = st1920.automaton.RegExpMatcher.makeOccurences(matchString70, matchString86);
        st1920.automaton.MatchString matchString89 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString70);
        st1920.automaton.MatchString matchString90 = st1920.automaton.RegExpMatcher.makeOccurences(matchString56, matchString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString89);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString90);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString8);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString12, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString20);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString10, matchString12, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString6);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeOr(matchString19, matchString21);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString21);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeString(matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNot(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makePattern(matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeString(matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString34, matchString38);
        st1920.automaton.MatchString matchString40 = null;
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString38, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNot(matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNot(matchString43);
        st1920.automaton.MatchString matchString45 = null;
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString46);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeOr(matchString45, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeAnd(matchString51, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makePattern(matchString52);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeString(matchString52);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeOr(matchString45, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString27, matchString43, matchString55);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean58 = st1920.automaton.RegExpMatcher.matches("hi!a1aa", matchString57);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: integer expected at position 38");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNot(matchString1);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeString(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeOr(matchString2, matchString4);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeString(matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString2, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString0, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeOr(matchString15, matchString17);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeString(matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString12, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString28);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makePattern(matchString34);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString38, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeOccurences(matchString34, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString32, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeRange(matchString31, matchString32);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeRange(matchString27, matchString46);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString46);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeAnd(matchString51, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeAnd(matchString54, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeOr(matchString52, matchString54);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString52);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeString(matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeOr(matchString50, matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnd(matchString2, matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makePattern(matchString3);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeAnd(matchString6, matchString7);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString7, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeOccurences(matchString3, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makePattern(matchString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString19, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurences(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOr(matchString13, matchString24);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRange(matchString1, matchString13);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString27);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makePattern(matchString31);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString35, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeOccurences(matchString31, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeAnd(matchString42, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makePattern(matchString43);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeAnd(matchString49, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString47, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeOccurences(matchString43, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOr(matchString41, matchString52);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeRange(matchString29, matchString41);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString55);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeOccurences(matchString28, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString57);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeRange(matchString0, matchString57);
        java.lang.Class<?> wildcardClass61 = matchString60.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        st1920.automaton.MatchString matchString1 = null;
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnd(matchString2, matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeOr(matchString3, matchString5);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeString(matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString3, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOr(matchString16, matchString18);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeAnd(matchString22, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeString(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString16, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeRange(matchString13, matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makePattern(matchString26);
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeAnd(matchString29, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString29);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeAnd(matchString34, matchString35);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makePattern(matchString35);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeAnd(matchString38, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString39, matchString43);
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeOccurences(matchString35, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString33, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeRange(matchString32, matchString33);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString47);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeRange(matchString28, matchString47);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString47);
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean51 = st1920.automaton.RegExpMatcher.matches("hi!1hi!a11ahi!a1hi!a1ahi!1hi!a11a", matchString47);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: interval syntax error at position 75");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeString(matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeString(matchString15);
        boolean boolean19 = st1920.automaton.RegExpMatcher.matches("a1hi!1", matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeString(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNot(matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makePattern(matchString28);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeString(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString33, matchString37);
        st1920.automaton.MatchString matchString39 = null;
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNot(matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNot(matchString42);
        st1920.automaton.MatchString matchString44 = null;
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeOr(matchString44, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makePattern(matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeString(matchString51);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOr(matchString44, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString26, matchString42, matchString54);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString54);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString58, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString60);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makePattern(matchString63);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeAnd(matchString66, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeAnd(matchString69, matchString70);
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString67, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeOccurences(matchString63, matchString72);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeAnd(matchString61, matchString63);
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeAnd(matchString75, matchString76);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeAnd(matchString78, matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeOr(matchString76, matchString78);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString61, matchString78);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeAnd(matchString83, matchString84);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makePattern(matchString84);
        st1920.automaton.MatchString matchString87 = st1920.automaton.RegExpMatcher.makeRange(matchString61, matchString86);
        st1920.automaton.MatchString matchString88 = st1920.automaton.RegExpMatcher.makeString(matchString86);
        st1920.automaton.MatchString matchString89 = st1920.automaton.RegExpMatcher.makeOr(matchString57, matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString87);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString88);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString89);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        boolean boolean2 = st1920.automaton.RegExpMatcher.matches("hi!1hi!a11a", "hi!1hi!a11ahi!a1hi!a1ahi!1hi!a11a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean2 + "' != '" + false + "'", boolean2 == false);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makePattern(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = null;
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString17, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeOccurences(matchString1, matchString19);
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString1);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeString(matchString26);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makePattern(matchString29);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString33, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeOccurences(matchString29, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeOccurences(matchString26, matchString29);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeAnd(matchString41, matchString42);
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeAnd(matchString44, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeOr(matchString42, matchString44);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeRange(matchString26, matchString44);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString23, matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        st1920.automaton.MatchString matchString0 = null;
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString1);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeOr(matchString0, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeString(matchString4);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makePattern(matchString9);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeAnd(matchString15, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString13, matchString17);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeOccurences(matchString9, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makePattern(matchString21);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString25, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeOccurences(matchString21, matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeOr(matchString19, matchString30);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeRange(matchString7, matchString19);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makePattern(matchString37);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString41, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeOccurences(matchString37, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeAnd(matchString48, matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makePattern(matchString49);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeAnd(matchString52, matchString53);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnd(matchString55, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString53, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeOccurences(matchString49, matchString58);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeOr(matchString47, matchString58);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeRange(matchString35, matchString47);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString61);
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeOccurences(matchString34, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString63);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString6, matchString63);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeAnd(matchString67, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makeOr(matchString68, matchString70);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeAnd(matchString74, matchString75);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString75);
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makePattern(matchString77);
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString78);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeAnd(matchString80, matchString81);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString80);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString83);
        st1920.automaton.MatchString matchString85 = st1920.automaton.RegExpMatcher.makeNot(matchString83);
        st1920.automaton.MatchString matchString86 = st1920.automaton.RegExpMatcher.makeAnd(matchString78, matchString85);
        st1920.automaton.MatchString matchString87 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString66, matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString85);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString86);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString87);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString4);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeOr(matchString1, matchString3);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString8);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString3);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeOr(matchString5, matchString7);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString12);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makePattern(matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString0, matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeAnd(matchString1, matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString2, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString2);
        boolean boolean9 = st1920.automaton.RegExpMatcher.matches("a1", matchString2);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString2);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNot(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("a11a", "hi!1hi!a11ahi!a1hi!a1ahi!1hi!a11ahi!a1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "a11ahi!1hi!a11ahi!a1hi!a1ahi!1hi!a11ahi!a1" + "'", str2.equals("a11ahi!1hi!a11ahi!a1hi!a1ahi!1hi!a11ahi!a1"));
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!a1aa", "a1hi!hi!a1hi!1");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!a1aaa1hi!hi!a1hi!1" + "'", str2.equals("hi!a1aaa1hi!hi!a1hi!1"));
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNot(matchString0);
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString1);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeAnd(matchString7, matchString8);
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString5, matchString9);
        st1920.automaton.MatchString matchString11 = null;
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString11);
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNot(matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString14, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makePattern(matchString15);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeAnd(matchString18, matchString19);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString22);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString19, matchString23);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeOccurences(matchString15, matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeRange(matchString13, matchString24);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString26, matchString27);
        st1920.automaton.MatchString matchString29 = null;
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString31);
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeAnd(matchString33, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeOr(matchString31, matchString33);
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makeAnd(matchString37, matchString38);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeString(matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeOccurencesAndMore(matchString31, matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString29, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeAnd(matchString47, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makePattern(matchString48);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makeAnd(matchString51, matchString52);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeAnd(matchString54, matchString55);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString52, matchString56);
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeOccurences(matchString48, matchString57);
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeAnd(matchString46, matchString48);
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeAnd(matchString60, matchString61);
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeAnd(matchString63, matchString64);
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeOr(matchString61, matchString63);
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString46, matchString63);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeOccurences(matchString29, matchString63);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeOr(matchString28, matchString63);
        boolean boolean70 = st1920.automaton.RegExpMatcher.matches("", matchString69);
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString2, matchString69);
        java.lang.Class<?> wildcardClass72 = matchString69.getClass();
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString0);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makeAnd(matchString5, matchString6);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makePattern(matchString6);
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeAnd(matchString9, matchString10);
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeAnd(matchString12, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString10, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeOccurences(matchString6, matchString15);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString4, matchString16);
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeRange(matchString3, matchString4);
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString3);
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeString(matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeAnd(matchString24, matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makePattern(matchString25);
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makeAnd(matchString28, matchString29);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeAnd(matchString31, matchString32);
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString29, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeOccurences(matchString25, matchString34);
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeAnd(matchString36, matchString37);
        st1920.automaton.MatchString matchString39 = st1920.automaton.RegExpMatcher.makePattern(matchString37);
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString40, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString44 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeAnd(matchString43, matchString44);
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString41, matchString45);
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeOccurences(matchString37, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeOr(matchString35, matchString46);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeRange(matchString23, matchString35);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrOne(matchString49);
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeAnd(matchString21, matchString50);
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeRepeatZeroOrMore(matchString50);
        boolean boolean53 = st1920.automaton.RegExpMatcher.matches("hi!hi!", matchString50);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeOr(matchString3, matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString39);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString44);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeAnd(matchString2, matchString3);
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString2);
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString1, matchString5);
        boolean boolean7 = st1920.automaton.RegExpMatcher.matches("a1", matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("a1", "hi!1hi!a11a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "a1hi!1hi!a11a" + "'", str2.equals("a1hi!1hi!a11a"));
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        java.lang.String str2 = st1920.automaton.RegExpMatcher.makeConcatenation("hi!1hi!a11ahi!a1hi!a1ahi!1hi!a11a", "a");
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertTrue("'" + str2 + "' != '" + "hi!1hi!a11ahi!a1hi!a1ahi!1hi!a11aa" + "'", str2.equals("hi!1hi!a11ahi!a1hi!a1ahi!1hi!a11aa"));
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        st1920.automaton.MatchString matchString0 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString1 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString2 = st1920.automaton.RegExpMatcher.makeAnd(matchString0, matchString1);
        st1920.automaton.MatchString matchString3 = st1920.automaton.RegExpMatcher.makeNotPattern(matchString2);
        st1920.automaton.MatchString matchString4 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString5 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString6 = st1920.automaton.RegExpMatcher.makeAnd(matchString4, matchString5);
        st1920.automaton.MatchString matchString7 = st1920.automaton.RegExpMatcher.makePattern(matchString5);
        st1920.automaton.MatchString matchString8 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString9 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString10 = st1920.automaton.RegExpMatcher.makeAnd(matchString8, matchString9);
        st1920.automaton.MatchString matchString11 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString12 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString13 = st1920.automaton.RegExpMatcher.makeAnd(matchString11, matchString12);
        st1920.automaton.MatchString matchString14 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString9, matchString13);
        st1920.automaton.MatchString matchString15 = st1920.automaton.RegExpMatcher.makeOccurences(matchString5, matchString14);
        st1920.automaton.MatchString matchString16 = st1920.automaton.RegExpMatcher.makeAnd(matchString3, matchString5);
        st1920.automaton.MatchString matchString17 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString18 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString19 = st1920.automaton.RegExpMatcher.makeAnd(matchString17, matchString18);
        st1920.automaton.MatchString matchString20 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString21 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString22 = st1920.automaton.RegExpMatcher.makeAnd(matchString20, matchString21);
        st1920.automaton.MatchString matchString23 = st1920.automaton.RegExpMatcher.makeOr(matchString18, matchString20);
        st1920.automaton.MatchString matchString24 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString3, matchString20);
        st1920.automaton.MatchString matchString25 = st1920.automaton.RegExpMatcher.makeString(matchString24);
        st1920.automaton.MatchString matchString26 = st1920.automaton.RegExpMatcher.makeNot(matchString25);
        st1920.automaton.MatchString matchString27 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString28 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString29 = st1920.automaton.RegExpMatcher.makeAnd(matchString27, matchString28);
        st1920.automaton.MatchString matchString30 = st1920.automaton.RegExpMatcher.makePattern(matchString28);
        st1920.automaton.MatchString matchString31 = st1920.automaton.RegExpMatcher.makeString(matchString30);
        st1920.automaton.MatchString matchString32 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString33 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString34 = st1920.automaton.RegExpMatcher.makeAnd(matchString32, matchString33);
        st1920.automaton.MatchString matchString35 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString36 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString37 = st1920.automaton.RegExpMatcher.makeAnd(matchString35, matchString36);
        st1920.automaton.MatchString matchString38 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString33, matchString37);
        st1920.automaton.MatchString matchString39 = null;
        st1920.automaton.MatchString matchString40 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString37, matchString39);
        st1920.automaton.MatchString matchString41 = st1920.automaton.RegExpMatcher.makeNot(matchString40);
        st1920.automaton.MatchString matchString42 = st1920.automaton.RegExpMatcher.makeAnd(matchString30, matchString41);
        st1920.automaton.MatchString matchString43 = st1920.automaton.RegExpMatcher.makeNot(matchString42);
        st1920.automaton.MatchString matchString44 = null;
        st1920.automaton.MatchString matchString45 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString46 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString47 = st1920.automaton.RegExpMatcher.makeAnd(matchString45, matchString46);
        st1920.automaton.MatchString matchString48 = st1920.automaton.RegExpMatcher.makeRepeatOneOrMore(matchString45);
        st1920.automaton.MatchString matchString49 = st1920.automaton.RegExpMatcher.makeOr(matchString44, matchString48);
        st1920.automaton.MatchString matchString50 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString51 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString52 = st1920.automaton.RegExpMatcher.makeAnd(matchString50, matchString51);
        st1920.automaton.MatchString matchString53 = st1920.automaton.RegExpMatcher.makePattern(matchString51);
        st1920.automaton.MatchString matchString54 = st1920.automaton.RegExpMatcher.makeString(matchString51);
        st1920.automaton.MatchString matchString55 = st1920.automaton.RegExpMatcher.makeOr(matchString44, matchString54);
        st1920.automaton.MatchString matchString56 = st1920.automaton.RegExpMatcher.makeOccurencesFromTo(matchString26, matchString42, matchString54);
        st1920.automaton.MatchString matchString57 = st1920.automaton.RegExpMatcher.makeAnyChar();
        st1920.automaton.MatchString matchString58 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString59 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString60 = st1920.automaton.RegExpMatcher.makeAnd(matchString58, matchString59);
        st1920.automaton.MatchString matchString61 = st1920.automaton.RegExpMatcher.makePattern(matchString59);
        st1920.automaton.MatchString matchString62 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString63 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString64 = st1920.automaton.RegExpMatcher.makeAnd(matchString62, matchString63);
        st1920.automaton.MatchString matchString65 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString66 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString67 = st1920.automaton.RegExpMatcher.makeAnd(matchString65, matchString66);
        st1920.automaton.MatchString matchString68 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString63, matchString67);
        st1920.automaton.MatchString matchString69 = st1920.automaton.RegExpMatcher.makeOccurences(matchString59, matchString68);
        st1920.automaton.MatchString matchString70 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString71 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString72 = st1920.automaton.RegExpMatcher.makeAnd(matchString70, matchString71);
        st1920.automaton.MatchString matchString73 = st1920.automaton.RegExpMatcher.makePattern(matchString71);
        st1920.automaton.MatchString matchString74 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString75 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString76 = st1920.automaton.RegExpMatcher.makeAnd(matchString74, matchString75);
        st1920.automaton.MatchString matchString77 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString78 = st1920.automaton.RegExpMatcher.makeNotAnything();
        st1920.automaton.MatchString matchString79 = st1920.automaton.RegExpMatcher.makeAnd(matchString77, matchString78);
        st1920.automaton.MatchString matchString80 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString75, matchString79);
        st1920.automaton.MatchString matchString81 = st1920.automaton.RegExpMatcher.makeOccurences(matchString71, matchString80);
        st1920.automaton.MatchString matchString82 = st1920.automaton.RegExpMatcher.makeOr(matchString69, matchString80);
        st1920.automaton.MatchString matchString83 = st1920.automaton.RegExpMatcher.makeRange(matchString57, matchString69);
        st1920.automaton.MatchString matchString84 = st1920.automaton.RegExpMatcher.makeFollowedBy(matchString56, matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString0);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString1);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString2);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString3);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString4);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString5);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString6);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString7);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString8);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString9);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString10);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString11);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString12);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString13);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString14);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString15);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString16);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString17);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString18);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString19);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString20);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString21);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString22);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString23);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString24);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString25);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString26);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString27);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString28);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString29);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString30);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString31);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString32);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString33);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString34);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString35);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString36);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString37);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString38);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString40);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString41);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString42);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString43);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString45);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString46);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString47);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString48);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString49);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString50);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString51);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString52);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString53);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString54);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString55);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString56);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString57);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString58);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString59);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString60);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString61);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString62);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString63);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString64);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString65);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString66);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString67);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString68);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString69);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString70);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString71);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString72);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString73);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString74);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString75);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString76);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString77);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString78);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString79);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString80);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString81);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString82);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString83);
        // Regression assertion (captures the current behavior of the code)
        org.junit.Assert.assertNotNull(matchString84);
    }
}

